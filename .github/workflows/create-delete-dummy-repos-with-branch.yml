name: Create Multiple Dummy Repositories

on:
  workflow_dispatch:  # Allows manual trigger

jobs:
  create_repos:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Git Config
        run: |
          git config --global user.email "lalittanysudhakar@gmail.com"
          git config --global user.name "lalitsudhakar"

      - name: Create Multiple Dummy Repositories
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          ORG_NAME: "lalitsudhakar"
        run: |
          for i in $(seq 1 5); do  # Change 5 to any number of repos you need
            REPO_NAME="dummy-repo-$i"
            echo "Processing repository: $REPO_NAME"

            # Delete the repo if it exists
            response=$(curl -s -o /dev/null -w "%{http_code}" -X DELETE \
              -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/$ORG_NAME/$REPO_NAME)

            if [[ "$response" == "204" ]]; then
              echo "Existing repository $REPO_NAME deleted successfully."
            else
              echo "No existing repository found or failed to delete $REPO_NAME."
            fi

            sleep 2

            # Create a new repository
            curl -X POST -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/user/repos \
              -d '{"name": "'"$REPO_NAME"'", "private": false}'

            sleep 2

            # Initialize repository and add branches
            git clone https://$GH_TOKEN@github.com/$ORG_NAME/$REPO_NAME.git
            cd $REPO_NAME

            echo 'print("Hello from Dummy Repo")' > main.py
            git add main.py
            git commit -m "Add dummy Python script"
            git push origin main

            for branch in "Test-Github" "Docker-Dev" "Prod" "Stage"; do
              git checkout -b $branch
              git push origin $branch
            done

            cd ..
            rm -rf $REPO_NAME  # Clean up local repo
          done
