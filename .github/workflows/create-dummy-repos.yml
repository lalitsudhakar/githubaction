name: Create Public Dummy Repo

on:
  workflow_dispatch:  # Allows manual trigger from GitHub Actions

jobs:
  create_repo:
    runs-on: ubuntu-latest

    steps:
      - name: Set Up Environment
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          ORG_NAME: ${{ secrets.ORG_NAME }}
          REPO_NAME: "dummy-repo"
        run: |
          echo "Using Organization: $ORG_NAME"
          echo "Repo to create: $REPO_NAME"

      - name: Delete Existing Repository (if exists)
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          ORG_NAME: ${{ secrets.ORG_NAME }}
          REPO_NAME: "dummy-repo"
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" -X GET \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/$ORG_NAME/$REPO_NAME)

          if [ "$response" -eq 200 ]; then
            echo "Repository already exists. Deleting..."
            curl -X DELETE -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/$ORG_NAME/$REPO_NAME
            sleep 5  # Wait to ensure deletion is processed
          else
            echo "Repository does not exist, proceeding to create it."
          fi

      - name: Create Public Repository
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          ORG_NAME: ${{ secrets.ORG_NAME }}
          REPO_NAME: "dummy-repo"
        run: |
          curl -X POST -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/orgs/$ORG_NAME/repos \
            -d '{
              "name": "'"$REPO_NAME"'",
              "private": false,
              "auto_init": true
            }'
          sleep 5  # Give some time for the repository to be available

      - name: Add Branches & Push Sample Code
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          ORG_NAME: ${{ secrets.ORG_NAME }}
          REPO_NAME: "dummy-repo"
        run: |
          BRANCHES=("Test-Github" "Docker-Dev" "Prod" "Stage")

          for BRANCH in "${BRANCHES[@]}"; do
            echo "Creating branch: $BRANCH"

            # Create a new branch via GitHub API
            curl -X POST -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/$ORG_NAME/$REPO_NAME/git/refs \
              -d '{
                "ref": "refs/heads/'"$BRANCH"'",
                "sha": "'$(curl -s -H "Authorization: token $GH_TOKEN" \
                    -H "Accept: application/vnd.github.v3+json" \
                    https://api.github.com/repos/$ORG_NAME/$REPO_NAME/git/refs/heads/main \
                    | jq -r '.object.sha')'"
              }'

            # Add a sample Python file via GitHub API
            curl -X PUT -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/$ORG_NAME/$REPO_NAME/contents/sample.py \
              -d '{
                "message": "Add sample Python code",
                "content": "'"$(echo -n 'print(\"Hello from '"$BRANCH"'\")' | base64)"'",
                "branch": "'"$BRANCH"'"
              }'
          done

      - name: Success Message
        run: echo "Public repository 'dummy-repo' with all branches and sample code created successfully!"
